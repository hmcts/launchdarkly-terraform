jobs:
  - job: Plan_Launchdarkly
    pool:
      vmImage: ${{ parameters.agentPool }}
    steps:
      - checkout: self
        clean: true
        persistCredentials: false
        path: self
      - checkout: cnp-azuredevops-libraries
        displayName: Checkout cnp-azuredevops-libraries
        clean: true
        persistCredentials: false
        path: cnp-azuredevops-libraries
      - task: Bash@3
        displayName: Terraform install (tfenv)
        inputs:
          filePath: $(Pipeline.Workspace)/cnp-azuredevops-libraries/scripts/tfenv-install-terraform.sh
      - task: TerraformCLI@0
        displayName: Init - launchdarkly
        inputs:
          command: 'init'
          backendType: 'azurerm'
          backendServiceArm: 'DTS-CFTPTL-INTSVC'
          backendAzureRmResourceGroupName: 'core-infra-intsvc-rg'
          backendAzureRmStorageAccountName: 'cftptlintsvc'
          backendAzureRmContainerName: 'tfstate'
          backendAzureRmKey: 'launchdarkly.tfstate'
          workingDirectory: '$(Pipeline.Workspace)/self'
      - task: TerraformCLI@0
        displayName: Plan - launchdarkly
        inputs:
          command: 'plan'
          commandOptions: '-out=launchdarkly${{ parameters.build }}plan'
          workingDirectory: '$(Pipeline.Workspace)/self'
          environmentServiceName: 'DTS-CFTPTL-INTSVC'
      - task: Bash@3
        displayName: "Remove local tfstate"
        inputs:
          targetType: 'inline'
          workingDirectory: '$(Pipeline.Workspace)/self'
          script: |
            rm -f terraform.tfstate* && rm -rf .terraform/
      - publish: $(Pipeline.Workspace)/self/launchdarkly${{ parameters.build }}plan
        artifact: launchdarkly${{ parameters.build }}plan
