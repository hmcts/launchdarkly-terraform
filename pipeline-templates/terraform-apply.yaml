jobs:
  - deployment: Deploy
    pool:
      vmImage: ${{ parameters.agentPool }}
    environment: mgmt
    strategy:
      # default deployment strategy
      runOnce:
        deploy:
          steps:
            - download: current
              displayName: 'Download artifacts'
              artifact: drop
            - download: current
              displayName: 'Download tfplan launchdarkly'
              artifact: launchdarkly${{ parameters.build }}plan
            - task: CopyFiles@2
              inputs:
                sourceFolder: '$(Pipeline.Workspace)/launchdarkly${{ parameters.build }}plan'
                targetFolder: '$(Pipeline.Workspace)/drop'
            - task: TerraformInstaller@0
              inputs:
                terraformVersion: ${{ parameters.terraformVersion }}
            - task: TerraformCLI@0
              displayName: Init - launchdarkly
              inputs:
                command: 'init'
                backendType: 'azurerm'
                backendServiceArm: 'DTS-CFTPTL-INTSVC'
                backendAzureRmResourceGroupName: 'core-infra-intsvc-rg'
                backendAzureRmStorageAccountName: 'cftptlintsvc'
                backendAzureRmContainerName: 'tfstate'
                backendAzureRmKey: 'launchdarkly.tfstate'
                workingDirectory: '$(Pipeline.Workspace)/drop'
            - task: TerraformCLI@0
              displayName: Apply - launchdarkly
              inputs:
                command: 'apply'
                commandOptions: 'launchdarkly${{ parameters.build }}plan'
                environmentServiceName: 'DTS-CFTPTL-INTSVC'
                workingDirectory: '$(Pipeline.Workspace)/drop'